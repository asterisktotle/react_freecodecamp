'use client';
import TabContent from './TabContent';

const TabsTest = () => {
	const handleChange = (currentTabIndex) => {
		console.log(currentTabIndex);
	};

	const RandomContent = () => {
		return (
			<div>
				{' '}
				Using useEffect to run on the client only: Ensure that the component
				renders the same content server-side as it does during the initial
				client-side render to prevent a hydration mismatch. You can
				intentionally render different content on the client with the useEffect
				hook.{' '}
			</div>
		);
	};

	const tabs = [
		{
			id: 1,
			label: 'Hydration',
			content: (
				<div>
					Hydration is when React converts the pre-rendered HTML from the server
					into a fully interactive application by attaching event handlers.
				</div>
			),
		},
		{
			id: 2,
			label: 'hydrateRoot',
			content: (
				<div>
					hydrateRoot lets you display React components inside a browser DOM
					node whose HTML content was previously generated by react-dom/server.
				</div>
			),
		},
		{
			id: 3,
			label: 'Possible ways to Fix it',
			content: <RandomContent />,
		},
	];

	return <TabContent tabsContent={tabs} onChange={handleChange} />;
};

export default TabsTest;
